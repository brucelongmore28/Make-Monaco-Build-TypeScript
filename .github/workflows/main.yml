name: Daily builds of monaco-typescript and monaco of TypeScript

# For testing
# on: push

on:
  schedule:
  - cron: "0 4 * * *"

jobs:
  build:

    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v1
    - uses: actions/setup-node@v1
      with:
        node-version: '10.x'
        registry-url: 'https://registry.npmjs.org'

    # Lets us use one-liner JSON manipulations on package.jsons
    - run: "npm install -g json"

    - name: Setup Monaco TypeScript
      env:
        NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
      run: |
        git clone https://github.com/microsoft/monaco-typescript.git
        cd monaco-typescript
        npm i

        # set up the monaco to be based on the nightly version
        npm run run-nightly
        npm run prepublishOnly

        json -I -f package.json -e "this.name='@typescript-deploys/monaco-typescript'"
        
        npm publish --access public --tag nightly
        cd ..


    - name: Setup Monaco Editor
      env:
        NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
      run: |
        git clone https://github.com/microsoft/monaco-editor.git
        cd monaco-editor

        json -I -f package.json -e "this.name='@typescript-deploys/monaco-editor'" 

        # Yarn supports aliasing a module, so we can use the fork and pretend
        # to be the real version of the module.
        yarn add --dev monaco-typescript@npm:@typescript-deploys/monaco-typescript@nightly
        
        # Match the version to the monaco-ts version
        json -I -f package.json -e "this.version='$(json -f node_modules/monaco-typescript/package.json version)'" 

        echo 'Starting gulp release'

        # Create a release build, this makes a new sub-folder called release with the module
        gulp release
        cd release

        npm publish --access public --tag nightly

