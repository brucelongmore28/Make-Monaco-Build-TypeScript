name: Daily builds of monaco-typescript and monaco of TypeScript

# For testing
# on: push

on:
  schedule:
  - cron: "0 0 * * *"

jobs:
  build:

    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v1
    - uses: actions/setup-node@v1
      with:
        node-version: '10.x'
        registry-url: 'https://registry.npmjs.org'


    # Lets us use one-liner JSON manipulations on package.jsons
    - run: "npm install -g json"

  

    - name: Setup Monaco TypeScript
      run: |
        git clone https://github.com/microsoft/monaco-typescript.git
        cd monaco-typescript
        npm i

        # set up the monaco to be based on the nightly version
        npm run run-nightly
        npm run prepublishOnly

        json -I -f package.json -e "this.name='@typescript-deploys/monaco-typescript'"
        
        MONACO_TS_VERSION=$(json -f package.json version)

    - name: Deploy Monaco TypeScript
      run: npm publish --access public
      env:
        NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}


    - name: Setup Monaco Editor
      run: |
        git clone https://github.com/microsoft/monaco-editor.git
        cd monaco-editor

        json -I -f package.json -e "this.name='@typescript-deploys/monaco-editor'" 
        json -I -f package.json -e "this.version='$MONACO_TS_VERSION'" 

        # Yarn supports aliasing a module, so we can use the fork and pretend
        # to be the real version of the module.
        yarn add monaco-typescript@npm:@typescript-deploys/monaco-typescript@$MONACO_TS_VERSION

        # Create a release build, this makes a new sub-folder called release with the module
        gulp release
        cd release

    - name: Deploy Monaco Editor
      run: npm publish --access public
      env:
        NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
